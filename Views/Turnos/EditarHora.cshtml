@using System.Globalization;
@model Tesis.Models.Turno;
@{
    ViewData["Title"] = "Editar Hora";
}

<link rel="stylesheet" href="~/css/EditarHora.css" />
<div class="card text-center">

    <form asp-action="EditarHora" method="post">
        <input type="hidden" class="form-control" asp-for="Id" value="@Model.Id">
        <div class="card-header">
            <h2>Editar Hora</h2>
        </div>
        <div class="mb-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        </div>
        <div class="card-body row">
            <div class="form-group col-sm-3 mx-auto">
                <h5 class="card-title">Seleccione sección</h5>
                <fieldset disabled>
                    <select class="form-select" value="@Model.Tramite.Seccion.Id">
                        <option value="@Model.Tramite.Seccion.Id">@Model.Tramite.Seccion.Nombre</option>
                    </select>
                </fieldset>
            </div>

            <div class="form-group col-sm-3 mx-auto">
                <h5 class="card-title">Seleccione el tramite</h5>
                <select id="tramite" class="form-select" value="">
                </select>
            </div>
            <div class="form-group col-sm-3 mx-auto">
                <h5 class="card-title">Seleccione el día</h5>
                <input type="date" id="fecha" class="form-control" asp-for="@Model.Fecha">
            </div>

            <div class="form-group col-sm-3 mx-auto">
                <h5 class="card-title">Seleccione la hora</h5>
                <select id="hora" class="form-select" asp-for="@Model.Hora">
                    <!-- Options para el tercer select se llenarán dinámicamente con JavaScript -->
                </select>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary" id="Ingresar">Editar</button>
            <a asp-controller="Turnos" asp-action="MiUsuario" class="btn btn-danger float-right">Cancelar</a>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


<script>
    $(document).ready(function () {
        // Obtener la fecha actual
        var fechaActual = new Date().toISOString().split("T")[0];

        // Configurar la fecha mínima y fecha por defecto en el input de fecha
        document.getElementById("fecha").min = fechaActual;
        document.getElementById("fecha").value = fechaActual;

        // Obtener el ID de la sección seleccionada por defecto (en este caso, 1)
        var seccionId = @Model.Tramite.SeccionId;

        // Realizar una solicitud Ajax para obtener trámites por sección al cargar la página
        $.ajax({
            url: '@Url.Action("ObtenerTramitesPorSeccion", "Turnos")',
            type: 'GET',
            data: { seccionId: seccionId },
            success: function (data) {
                // Limpiar el segundo select
                $("#tramite").empty();

                // Agregar opciones al segundo select con los trámites
                $.each(data, function (i, tramite) {
                    $("#tramite").append($('<option>', {
                        value: tramite.id,
                        text: tramite.nombre
                    }));
                });

                // Puedes realizar otras acciones aquí si es necesario
            },
            error: function (error) {
                console.error("Error al obtener trámites: " + error);
            }
        });

        // Llamar a la función para cargar las horas al cargar la página
        cargarHorasDisponibles(fechaActual, seccionId);

        // Manejar el cambio en el primer select
        $("#seccion").change(function () {
            var seccionId = $(this).val();

            // Realizar una solicitud Ajax para obtener trámites por sección
            $.ajax({
                url: '@Url.Action("ObtenerTramitesPorSeccion", "Turnos")',
                type: 'GET',
                data: { seccionId: seccionId },
                success: function (data) {
                    // Limpiar el segundo select
                    $("#tramite").empty();

                    // Agregar opciones al segundo select con los trámites
                    $.each(data, function (i, tramite) {
                        $("#tramite").append($('<option>', {
                            value: tramite.id,
                            text: tramite.nombre
                        }));
                    });

                    // Puedes realizar otras acciones aquí si es necesario
                },
                error: function (error) {
                    console.error("Error al obtener trámites: " + error);
                }
            });

            // Llamar a la función para cargar las horas al cambiar la sección
            cargarHorasDisponibles(fechaActual, seccionId);
        });

        // Manejar el cambio en el input de fecha
        $("#fecha").change(function () {
            var fechaSeleccionada = $(this).val();
            var seccionId =@Model.Tramite.SeccionId;

            // Llamar a la función para cargar las horas al cambiar la fecha
            cargarHorasDisponibles(fechaSeleccionada, seccionId);
        });

        // Función para cargar las horas disponibles
        function cargarHorasDisponibles(fecha, seccionId) {
            $.ajax({
                url: '@Url.Action("ObtenerHorasOcupadasPorFechaYSeccion", "Turnos")',
                type: 'GET',
                data: { fecha: fecha, seccionId: seccionId },
                success: function (horasOcupadas) {
                    // Lista de todas las horas posibles
                    var horasPosibles = ["08:30", "08:40", "08:50", "09:00", "09:10", "09:20", "09:30", "09:40", "09:50", "10:00", "10:10", "10:20", "10:30", "10:40", "10:50", "11:00", "11:10", "11:20", "11:30", "11:40", "11:50", "12:00", "12:10", "12:20", "12:30", "12:40", "12:50", "13:00", "13:10", "13:20", "13:30", "13:40", "13:50", "14:00"];

                    // Filtrar las horas ocupadas de las posibles
                    var horasDisponibles = horasPosibles.filter(function (hora) {
                        return horasOcupadas.indexOf(hora) === -1;
                    });

                    // Limpiar el tercer select
                    $("#hora").empty();

                    if (horasDisponibles.length > 0) {
                        // Agregar opciones al tercer select con las horas disponibles
                        $.each(horasDisponibles, function (i, hora) {
                            $("#hora").append($('<option>', {
                                value: hora,
                                text: hora
                            }));
                        });
                    } else {
                        // Mostrar mensaje si no hay horas disponibles
                        $("#hora").after('<p>No quedan horas disponibles para esta fecha y sección.</p>');
                    }

                    // Puedes realizar otras acciones aquí si es necesario
                },
                error: function (error) {
                    console.error("Error al obtener horas ocupadas: " + error);
                }
            });
        }
    });

</script>
